#! /bin/csh -f
#
#  run an ADMIT project export from the unix commandline
#

if ($?ADMIT == 0) then
  echo 'No $ADMIT solution yet'
  # this is also where the non-developer environment needs to go
  exit 1
  setenv ADMIT ...
else
  echo "ADMIT version `python $ADMIT/admit/version.py`"
endif


if ($#argv == 0) goto usage

set projects = ()
set tgz = 0

set brief = 1
foreach arg ($*)
  if (x$arg == x-s) then
     set tgz = 1
     continue
  endif
  if (x$arg == x-a) then
    set brief = 0
    continue
  endif
  if (x$arg == x-b) then
    set brief = 1
    continue
  endif
  if (! -d $arg) then
    echo Warning: skipping $arg, it is not a directory
    continue
  endif
  if (! -e $arg/admit.xml) then
    echo Warning: skipping $arg, it is not an ADMIT directory
    continue
  endif

  if ($tgz) then
     set projects=($projects $arg)
     continue
  endif

  set tgz = $arg.tar.gz
  if ($brief) then
    # @todo what about .cim and .lim files 
    set dim=(`find $arg -type d -name \*.im -o -name \*.lim`)
    set excludes = ()
    foreach d ($dim)
      set excludes=($excludes --exclude=$d)
    end
    echo Writing brief $tgz
    echo Excluding: $dim
    tar -zcf $tgz $excludes $arg
  else
    echo Writing all in $tgz
    tar zcf $tgz $arg
  endif
end

if ($tgz) then
  set tgz = admit.tar.gz
  if ($brief) then
    # @todo what about .cim and .lim files 
    set dim=(`find $arg -type d -name \*.im -o -name \*.lim`)
    set excludes = ()
    foreach d ($dim)
      set excludes=($excludes --exclude=$d)
    end
    echo Writing brief $tgz
    echo Excluding: $dim
    tar -zcf $tgz $excludes $projects
  else
    echo Writing all in $tgz
    tar zcf $tgz $projects
  endif

endif

exit 0

usage:
    echo Usage:
    echo "$0 [-s] [-a] project1.admit [-b] project2.admit [-a] ...."
    echo ""
    echo " -a      export all files inside the project"
    echo " -b      brief export (the default)"
    echo " -s      single admit.tar.gz with all admit projects"
